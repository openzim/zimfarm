name: Publish

on:
  push:
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      force:
        description: "Force publish all components"
        required: false
        type: boolean
        default: false

jobs:
  paths-filter:
    runs-on: ubuntu-24.04

    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend_ui: ${{ steps.filter.outputs.frontend_ui }}
      dnscache: ${{ steps.filter.outputs.dnscache }}
      monitor: ${{ steps.filter.outputs.monitor }}
      receiver: ${{ steps.filter.outputs.receiver }}
      uploader: ${{ steps.filter.outputs.uploader }}
      watcher: ${{ steps.filter.outputs.watcher }}
      task_worker: ${{ steps.filter.outputs.task_worker }}
      worker_manager: ${{ steps.filter.outputs.worker_manager }}
      healthcheck: ${{ steps.filter.outputs.healthcheck }}

    steps:
      - uses: actions/checkout@v5

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend_ui:
              - 'frontend-ui/**'
            dnscache:
              - 'dnscache/**'
            monitor:
              - 'monitor/**'
            receiver:
              - 'receiver/**'
            uploader:
              - 'uploader/**'
            watcher:
              - 'watcher/**'
            task_worker:
              - 'worker/**'
            worker_manager:
              - 'worker/**'
            healthcheck:
              - 'healthcheck/**'

  dnscache:
    name: Dnscache build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.dnscache == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-dnscache
          on-master: latest
          tag-pattern: /^dnscache-v([0-9.]+)$/
          restrict-to: openzim/zimfarm
          context: dnscache
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  uploader:
    name: Uploader build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.uploader == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-uploader
          on-master: latest
          tag-pattern: /^uploader-v([0-9.]+)$/
          restrict-to: openzim/zimfarm
          context: uploader
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  backend:
    name: Backend build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.backend == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-backend
          on-master: latest
          restrict-to: openzim/zimfarm
          context: backend
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

      - name: Deploy Zimfarm API changes to openzim.org
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.ZIMFARM_KUBE_CONFIG }}
        with:
          args: rollout restart deployments api-deployment -n zimfarm

      - name: Deploy Zimfarm API changes to youzim.it
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.ZIMIT_KUBE_CONFIG }}
        with:
          args: rollout restart deployments api-deployment -n zimit

  frontend-ui:
    name: Frontend UI build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.frontend_ui == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-ui
          on-master: latest
          restrict-to: openzim/zimfarm
          context: frontend-ui
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

      - name: Deploy Zimfarm UI changes to openzim.org
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.ZIMFARM_KUBE_CONFIG }}
        with:
          args: rollout restart deployments ui-deployment -n zimfarm

      - name: Deploy Zimfarm UI changes to youzim.it
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.ZIMIT_KUBE_CONFIG }}
        with:
          args: rollout restart deployments farm-ui-deployment -n zimit

  receiver:
    name: Receiver build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.receiver == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-receiver
          on-master: latest
          restrict-to: openzim/zimfarm
          context: receiver
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

      - name: Deploy Zimfarm receiver changes
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.ZIM_KUBE_CONFIG }}
        with:
          args: rollout restart deployments receiver-deployment -n zim

  task-worker:
    name: Task worker build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.task_worker == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-task-worker
          on-master: latest
          restrict-to: openzim/zimfarm
          context: worker
          dockerfile: task-Dockerfile
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  worker-manager:
    name: Worker manager build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.worker_manager == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-worker-manager
          on-master: latest
          restrict-to: openzim/zimfarm
          context: worker
          dockerfile: manager-Dockerfile
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  monitor:
    name: Monitor build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.monitor == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-monitor
          on-master: latest
          restrict-to: openzim/zimfarm
          context: monitor
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

  watcher:
    name: Watcher build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.watcher == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-watcher
          on-master: latest
          restrict-to: openzim/zimfarm
          context: watcher
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

      - name: Deploy Zimfarm Watcher changes
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.ZIMFARM_KUBE_CONFIG }}
        with:
          args: rollout restart deployments watcher-deployment -n zimfarm

  healthcheck:
    name: Healthcheck build
    runs-on: ubuntu-24.04
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.healthcheck == 'true' || inputs.force }}
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v5

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/zimfarm-healthcheck
          on-master: latest
          restrict-to: openzim/zimfarm
          context: healthcheck
          registries: ghcr.io
          credentials: GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}

      - name: Deploy Healthcheck changes to openzim.org
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.ZIMFARM_KUBE_CONFIG }}
        with:
          args: rollout restart deployments status-deployment -n zimfarm

      - name: Deploy Healthcheck changes to youzim.it
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.ZIMIT_KUBE_CONFIG }}
        with:
          args: rollout restart deployments status-deployment -n zimit