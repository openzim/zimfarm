"""Remove mongo backup columns

Revision ID: 62227054989d
Revises: acf1446fa2aa
Create Date: 2023-05-12 15:29:06.706797

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "62227054989d"
down_revision = "acf1446fa2aa"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_refresh_token_mongo_id", "refresh_token", type_="unique")
    op.drop_column("refresh_token", "mongo_id")
    op.drop_column("refresh_token", "mongo_val")
    op.drop_constraint("uq_requested_task_mongo_id", "requested_task", type_="unique")
    op.drop_column("requested_task", "mongo_id")
    op.drop_column("requested_task", "mongo_val")
    op.drop_constraint("uq_schedule_mongo_id", "schedule", type_="unique")
    op.drop_column("schedule", "mongo_id")
    op.drop_column("schedule", "mongo_val")
    op.drop_column("schedule_duration", "mongo_val")
    op.drop_column("sshkey", "mongo_val")
    op.drop_constraint("uq_task_mongo_id", "task", type_="unique")
    op.drop_column("task", "mongo_id")
    op.drop_column("task", "mongo_val")
    op.drop_constraint("uq_user_mongo_id", "user", type_="unique")
    op.drop_column("user", "mongo_id")
    op.drop_column("user", "mongo_val")
    op.drop_constraint("uq_worker_mongo_id", "worker", type_="unique")
    op.drop_column("worker", "mongo_id")
    op.drop_column("worker", "mongo_val")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "worker",
        sa.Column(
            "mongo_val",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "worker",
        sa.Column("mongo_id", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.create_unique_constraint("uq_worker_mongo_id", "worker", ["mongo_id"])
    op.add_column(
        "user",
        sa.Column(
            "mongo_val",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "user", sa.Column("mongo_id", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.create_unique_constraint("uq_user_mongo_id", "user", ["mongo_id"])
    op.add_column(
        "task",
        sa.Column(
            "mongo_val",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "task", sa.Column("mongo_id", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.create_unique_constraint("uq_task_mongo_id", "task", ["mongo_id"])
    op.add_column(
        "sshkey",
        sa.Column(
            "mongo_val",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "schedule_duration",
        sa.Column(
            "mongo_val",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "schedule",
        sa.Column(
            "mongo_val",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "schedule",
        sa.Column("mongo_id", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.create_unique_constraint("uq_schedule_mongo_id", "schedule", ["mongo_id"])
    op.add_column(
        "requested_task",
        sa.Column(
            "mongo_val",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "requested_task",
        sa.Column("mongo_id", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.create_unique_constraint(
        "uq_requested_task_mongo_id", "requested_task", ["mongo_id"]
    )
    op.add_column(
        "refresh_token",
        sa.Column(
            "mongo_val",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "refresh_token",
        sa.Column("mongo_id", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.create_unique_constraint(
        "uq_refresh_token_mongo_id", "refresh_token", ["mongo_id"]
    )
    # ### end Alembic commands ###
