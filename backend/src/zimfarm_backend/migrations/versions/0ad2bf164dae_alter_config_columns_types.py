"""Alter config columns types + add missing indexes

Revision ID: 0ad2bf164dae
Revises: 8279abb2d6dc
Create Date: 2023-04-26 12:21:57.205579

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0ad2bf164dae"
down_revision = "8279abb2d6dc"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";')
    op.alter_column("schedule", "config", type_=postgresql.JSON(astext_type=sa.Text()))
    op.alter_column("task", "config", type_=postgresql.JSON(astext_type=sa.Text()))
    op.alter_column(
        "requested_task", "config", type_=postgresql.JSON(astext_type=sa.Text())
    )
    op.create_index(
        op.f("ix_schedule_category"), "schedule", ["category"], unique=False
    )
    op.create_index(
        op.f("ix_schedule_language_code"), "schedule", ["language_code"], unique=False
    )
    op.create_index(op.f("ix_schedule_tags"), "schedule", ["tags"], unique=False)
    op.create_index(op.f("ix_task_status"), "task", ["status"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("schedule", "config", type_=postgresql.JSONB(astext_type=sa.Text()))
    op.alter_column("task", "config", type_=postgresql.JSONB(astext_type=sa.Text()))
    op.alter_column(
        "requested_task", "config", type_=postgresql.JSONB(astext_type=sa.Text())
    )
    op.drop_index(op.f("ix_task_status"), table_name="task")
    op.drop_index(op.f("ix_schedule_tags"), table_name="schedule")
    op.drop_index(op.f("ix_schedule_language_code"), table_name="schedule")
    op.drop_index(op.f("ix_schedule_category"), table_name="schedule")
    # ### end Alembic commands ###
