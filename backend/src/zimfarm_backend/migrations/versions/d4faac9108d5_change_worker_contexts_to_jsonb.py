"""change worker contexts to jsonb

Revision ID: d4faac9108d5
Revises: d56f0cb3b772
Create Date: 2025-10-07 09:47:59.424823

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d4faac9108d5"
down_revision = "d56f0cb3b772"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create a temporary column
    op.add_column(
        "worker",
        sa.Column(
            "_contexts_json",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
            server_default=sa.text("'{}'"),
        ),
    )
    # Populate it with transformed data from contexts. Data was previously
    # an array of recipe names. Now, convert it to mapping of recipe aname to allowed IP
    op.execute(
        """
        UPDATE worker
        SET _contexts_json = COALESCE(
            (
                SELECT jsonb_object_agg(elem, null)
                FROM unnest(contexts) AS elem
            ),
            '{}'::jsonb
        )
        """
    )
    # Drop the old column and rename
    op.drop_column("worker", "contexts")
    op.alter_column("worker", "_contexts_json", new_column_name="contexts")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "worker",
        sa.Column(
            "_contexts_array",
            postgresql.ARRAY(sa.String()),
            server_default="{}",
            nullable=False,
        ),
    )
    op.execute(
        """
        UPDATE worker
        SET _contexts_array = COALESCE(
            (
                SELECT array_agg(key)
                FROM jsonb_each_text(contexts)
            ),
            '{}'::varchar[]
        )
        """
    )
    op.drop_column("worker", "contexts")
    op.alter_column("worker", "_contexts_array", new_column_name="contexts")
