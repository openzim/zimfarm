{
  "offliner_id": "wikihow",
  "stdOutput": true,
  "stdStats": true,
  "flags": {
    "language": {
      "type": "string",
      "required": true,
      "title": "Language",
      "description": "wikiHow website to build from. 2-letters language code."
    },
    "name": {
      "type": "string",
      "required": false,
      "title": "Name",
      "description": "ZIM name. Used as identifier and filename (date will be appended). Constructed from language if not supplied",
      "pattern": "^([a-z0-9\\-\\.]+_)([a-z\\-]+_)([a-z0-9\\-\\.]+)$"
    },
    "title": {
      "type": "string",
      "required": false,
      "title": "Title",
      "description": "Custom title for your ZIM. Wikihow homepage title otherwise",
      "minLength": 1,
      "maxLength": 30
    },
    "description": {
      "type": "string",
      "required": false,
      "title": "Description",
      "description": "Custom description for your ZIM. Wikihow homepage description (meta) otherwise",
      "minLength": 1,
      "maxLength": 80
    },
    "icon": {
      "type": "url",
      "required": false,
      "title": "Icon",
      "description": "Custom Icon for your ZIM (URL). wikiHow square logo otherwise"
    },
    "creator": {
      "type": "string",
      "required": false,
      "title": "Creator",
      "description": "Name of content creator. \"wikiHow\" otherwise"
    },
    "publisher": {
      "type": "string",
      "required": false,
      "title": "Publisher",
      "isPublisher": true,
      "description": "Custom publisher name (ZIM metadata). \"openZIM\" otherwise"
    },
    "tag": {
      "type": "string",
      "required": false,
      "title": "ZIM Tags",
      "description": "List of semi-colon-separated Tags for the ZIM file. _category:other and wikihow added automatically"
    },
    "without_external_links": {
      "type": "boolean",
      "required": false,
      "title": "Without External links",
      "description": "Remove all external links from pages. Link text is kept but not the address"
    },
    "without_videos": {
      "type": "boolean",
      "required": false,
      "title": "Without Videos",
      "description": "Don't include the video blocks (Youtube hosted). Most are copyrighted"
    },
    "exclude": {
      "type": "url",
      "required": false,
      "title": "Exclude",
      "description": "URL to a text file listing Article ID or `Category:` prefixed Category IDs to exclude from the scrape. Lines starting with # are ignored"
    },
    "only": {
      "type": "url",
      "required": false,
      "title": "Only",
      "description": "URL to a text file listing Article IDs. This filters out every other article. Lines starting with # are ignored"
    },
    "low_quality": {
      "type": "boolean",
      "required": false,
      "title": "Low quality",
      "description": "Use lower-quality, smaller file-size video encode"
    },
    "output": {
      "type": "string",
      "required": false,
      "title": "Output folder",
      "description": "Output folder for ZIM file(s). Leave it as `/output`",
      "pattern": "^/output$"
    },
    "tmp_dir": {
      "type": "string",
      "required": false,
      "title": "Temp folder",
      "description": "Where to create temporay build folder. Leave it as `/output`",
      "pattern": "^/output$"
    },
    "zim_file": {
      "type": "string",
      "required": false,
      "title": "ZIM filename",
      "description": "ZIM file name (based on --name if not provided). Include {period} to insert date period dynamically",
      "pattern": "^([a-z0-9\\-\\.]+_)([a-z\\-]+_)([a-z0-9\\-\\.]+_)([a-z0-9\\-\\.]+_|)([\\d]{4}-[\\d]{2}|\\{period\\}).zim$"
    },
    "optimization_cache": {
      "type": "url",
      "secret": true,
      "required": false,
      "title": "Optimization Cache URL",
      "description": "S3 Storage URL including credentials and bucket"
    },
    "category": {
      "type": "string",
      "required": false,
      "title": "Categories",
      "description": "Only scrape those categories (comma-separated). Use URL-ID of the Category (after the colon `:` in the URL). Add a slash after Category to request it without recursion"
    },
    "stats_filename": {
      "type": "string",
      "required": false,
      "title": "Stats filename",
      "description": "Scraping progress file. Leave it as `/output/task_progress.json`",
      "pattern": "^/output/task_progress\\.json$"
    },
    "debug": {
      "type": "boolean",
      "required": false,
      "title": "Debug",
      "description": "Enable verbose output"
    },
    "missing_article_tolerance": {
      "type": "integer",
      "required": false,
      "title": "Missing tolerance",
      "description": "Allow this percentage (0-100) of articles to be missing (HTTP 404). Defaults to 0: no tolerance",
      "min": 0,
      "max": 100
    },
    "delay": {
      "type": "float",
      "required": false,
      "title": "Delay",
      "description": "Add this delay (seconds) before each request to please wikiHow servers. Can be fractions. Defaults to 0: no delay",
      "min": 0
    },
    "api_delay": {
      "type": "float",
      "required": false,
      "title": "API Delay",
      "description": "Add this delay (seconds) before each API query (!= calls) to please wikiHow servers. Can be fractions. Defaults to 0: no delay",
      "min": 0
    }
  }
}
