{
  "offliner_id": "ifixit",
  "stdOutput": true,
  "stdStats": true,
  "flags": {
    "language": {
      "type": "string",
      "required": true,
      "title": "Language",
      "description": "iFixIt website to build from"
    },
    "name": {
      "type": "string",
      "required": false,
      "title": "Name",
      "description": "ZIM name. Used as identifier and filename (date will be appended). Constructed from language if not supplied"
    },
    "title": {
      "type": "string",
      "required": false,
      "title": "Title",
      "description": "Custom title for your ZIM. iFixIt homepage title otherwise",
      "minLength": 1,
      "maxLength": 30
    },
    "description": {
      "type": "string",
      "required": false,
      "title": "Description",
      "description": "Custom description for your ZIM. iFixIt homepage description (meta) otherwise",
      "minLength": 1,
      "maxLength": 80
    },
    "icon": {
      "type": "url",
      "required": false,
      "title": "Icon",
      "description": "Custom Icon for your ZIM (URL). iFixit square logo otherwise"
    },
    "creator": {
      "type": "string",
      "required": false,
      "title": "Creator",
      "description": "Name of content creator. “iFixit” otherwise"
    },
    "publisher": {
      "type": "string",
      "required": false,
      "title": "Publisher",
      "isPublisher": true,
      "description": "Custom publisher name (ZIM metadata). openZIM otherwise"
    },
    "tags": {
      "type": "string",
      "required": false,
      "title": "ZIM Tags",
      "description": "List of semi-colon-separated Tags for the ZIM file. _category:ifixit and ifixit added automatically"
    },
    "output": {
      "type": "string",
      "required": false,
      "title": "Output folder",
      "description": "Output folder for ZIM file(s). Leave it as `/output`",
      "pattern": "^/output$"
    },
    "tmp_dir": {
      "type": "string",
      "required": false,
      "title": "Temp folder",
      "description": "Where to create temporay build folder. Leave it as `/output`",
      "pattern": "^/output$"
    },
    "zim_file": {
      "type": "string",
      "required": false,
      "title": "ZIM filename",
      "description": "ZIM file name (based on --name if not provided). Include {period} to insert date period dynamically",
      "pattern": "^([a-z0-9\\-\\.]+_)([a-z\\-]+_)([a-z0-9\\-\\.]+_)([a-z0-9\\-\\.]+_|)([\\d]{4}-[\\d]{2}|\\{period\\}).zim$"
    },
    "optimization_cache": {
      "type": "url",
      "secret": true,
      "required": false,
      "title": "Optimization Cache URL",
      "description": "S3 Storage URL including credentials and bucket"
    },
    "stats_filename": {
      "type": "string",
      "required": false,
      "title": "Stats filename",
      "description": "Scraping progress file. Leave it as `/output/task_progress.json`",
      "pattern": "^/output/task_progress\\.json$"
    },
    "debug": {
      "type": "boolean",
      "required": false,
      "title": "Debug",
      "description": "Enable verbose output"
    },
    "delay": {
      "type": "float",
      "required": false,
      "title": "Delay",
      "description": "Add this delay (seconds) before each request to please iFixit servers. Can be fractions. Defaults to 0: no delay",
      "min": 0
    },
    "api_delay": {
      "type": "float",
      "required": false,
      "title": "API Delay",
      "description": "Add this delay (seconds) before each API query (!= calls) to please iFixit servers. Can be fractions. Defaults to 0: no delay",
      "min": 0
    },
    "cdn_delay": {
      "type": "float",
      "required": false,
      "title": "CDN Delay",
      "description": "Add this delay (seconds) before each CDN file download to please iFixit servers. Can be fractions. Defaults to 0: no delay",
      "min": 0
    },
    "max_missing_items_percent": {
      "type": "integer",
      "required": false,
      "title": "Max Missing Items",
      "description": "Amount of missing items which will force the scraper to stop, expressed as a percentage of the total number of items to retrieve. Integer from 1 to 100",
      "min": 1,
      "max": 100
    },
    "max_error_items_percent": {
      "type": "integer",
      "required": false,
      "title": "Max Error Items",
      "description": "Amount of items with failed processing which will force the scraper to stop, expressed as a percentage of the total number of items to retrieve. Integer from 1 to 100",
      "min": 1,
      "max": 100
    },
    "categories": {
      "type": "string",
      "required": false,
      "title": "Categories",
      "description": "Only scrape those categories (comma-separated). Specify the category names"
    },
    "no_category": {
      "type": "boolean",
      "required": false,
      "title": "No category",
      "description": "Do not scrape any category"
    },
    "guide": {
      "type": "string",
      "required": false,
      "title": "Guides",
      "description": "Only scrape this guide (comma-separated)). Specify the guide names"
    },
    "no_guide": {
      "type": "boolean",
      "required": false,
      "title": "No guide",
      "description": "Do not scrape any guide"
    },
    "info": {
      "type": "string",
      "required": false,
      "title": "Info",
      "description": "Only scrape this info (comma-separated)). Specify the info names"
    },
    "no_info": {
      "type": "boolean",
      "required": false,
      "title": "No info",
      "description": "Do not scrape any info"
    }
  }
}
